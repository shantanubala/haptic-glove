Archive member included because of file (symbol)

c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                              c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o (exit)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                              HapticGlove.o (__do_copy_data)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                              HapticGlove.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

selection           0x5               main.o
all_motors          0x2a              HapticGlove.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
LOAD HapticGlove.o
LOAD main.o
LOAD SerialCom.o
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7dc
 *(.vectors)
 .vectors       0x00000000       0x68 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_18
                0x000000a2                __vector_20
 .text          0x000000a6      0x410 HapticGlove.o
                0x00000382                get_on_time
                0x000000ba                motor_switch
                0x0000010a                define_all_motors
                0x000001ce                menu_display
                0x000000ec                kill_all_motors
                0x000001ea                get_delay
                0x000000a6                data_direction_setup
                0x0000032a                get_off_time
                0x0000028a                get_duration
                0x000003da                get_vibration
 .text          0x000004b6      0x2ca main.o
                0x000004b6                __vector_11
                0x000004ca                main
                0x0000051c                __vector_14
 .text          0x00000780       0x58 SerialCom.o
                0x00000780                delayLong
                0x00000792                serialCheckRxComplete
                0x0000079a                serialCheckTxReady
                0x000007a2                serialRead
                0x000007c0                setup_serial
                0x000007b0                serialWrite
 .text          0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text          0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text          0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000007d8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000007d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007d8        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                0x000007d8                exit
                0x000007d8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007d8        0x4 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007dc                _etext = .

.data           0x00800100      0x140 load address 0x000007dc
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100      0x13b HapticGlove.o
                0x00800100                TimingOn
                0x0080012f                TimingOff
                0x008001c6                EnterMotor
                0x00800194                TimingDelay
                0x0080015f                TimingDuration
 .data          0x0080023b        0x4 main.o
                0x0080023b                On_Time
                0x0080023d                Off_Time
 .data          0x0080023f        0x0 SerialCom.o
 .data          0x0080023f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .data          0x0080023f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .data          0x0080023f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800240                . = ALIGN (0x2)
 *fill*         0x0080023f        0x1 00
                0x00800240                _edata = .
                0x00800240                PROVIDE (__data_end, .)

.bss            0x00800240       0x37
                0x00800240                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800240        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm168.o
 .bss           0x00800240        0x0 HapticGlove.o
 .bss           0x00800240        0x8 main.o
                0x00800240                Num
                0x00800244                MRS_Upper
                0x00800246                selectionIndex
                0x00800242                MRS_Lower
 .bss           0x00800248        0x0 SerialCom.o
 .bss           0x00800248        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800248        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800248        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800248       0x2a HapticGlove.o
                0x00800248                all_motors
 COMMON         0x00800272        0x5 main.o
                0x00800272                selection
                0x00800277                PROVIDE (__bss_end, .)
                0x000007dc                __data_load_start = LOADADDR (.data)
                0x0000091c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800277        0x0
                0x00800277                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800277                PROVIDE (__noinit_end, .)
                0x00800277                _end = .
                0x00800277                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 HapticGlove.o
 .debug_aranges
                0x00000020       0x20 main.o
 .debug_aranges
                0x00000040       0x20 SerialCom.o

.debug_pubnames
                0x00000000      0x23f
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x125 HapticGlove.o
 .debug_pubnames
                0x00000125       0x99 main.o
 .debug_pubnames
                0x000001be       0x81 SerialCom.o

.debug_info     0x00000000      0x780
 *(.debug_info)
 .debug_info    0x00000000      0x4a7 HapticGlove.o
 .debug_info    0x000004a7      0x19a main.o
 .debug_info    0x00000641      0x13f SerialCom.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x351
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x188 HapticGlove.o
 .debug_abbrev  0x00000188       0xf6 main.o
 .debug_abbrev  0x0000027e       0xd3 SerialCom.o

.debug_line     0x00000000      0x76a
 *(.debug_line)
 .debug_line    0x00000000      0x46e HapticGlove.o
 .debug_line    0x0000046e      0x1c9 main.o
 .debug_line    0x00000637      0x133 SerialCom.o

.debug_frame    0x00000000      0x160
 *(.debug_frame)
 .debug_frame   0x00000000       0xb0 HapticGlove.o
 .debug_frame   0x000000b0       0x40 main.o
 .debug_frame   0x000000f0       0x70 SerialCom.o

.debug_str      0x00000000      0x2ae
 *(.debug_str)
 .debug_str     0x00000000      0x1c7 HapticGlove.o
                                0x23b (size before relaxing)
 .debug_str     0x000001c7       0x70 main.o
                                0x144 (size before relaxing)
 .debug_str     0x00000237       0x77 SerialCom.o
                                0x141 (size before relaxing)

.debug_loc      0x00000000      0x1e3
 *(.debug_loc)
 .debug_loc     0x00000000      0x175 HapticGlove.o
 .debug_loc     0x00000175       0x50 main.o
 .debug_loc     0x000001c5       0x1e SerialCom.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(HapticGlove.elf elf32-avr)
LOAD linker stubs
